"use strict";(self.webpackChunkentaingine_docs=self.webpackChunkentaingine_docs||[]).push([[9861],{3522:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var i=t(4848),s=t(8453);const o={title:"Tree of Thoughts",slug:"/prompting-techniques/tree-of-thoughts",sidebar_position:8,description:"Explore multiple reasoning paths for better solutions."},r=void 0,a={id:"prompting-techniques/tree-of-thoughts",title:"Tree of Thoughts",description:"Explore multiple reasoning paths for better solutions.",source:"@site/docs/prompting-techniques/tree-of-thoughts.mdx",sourceDirName:"prompting-techniques",slug:"/prompting-techniques/tree-of-thoughts",permalink:"/prompting-techniques/tree-of-thoughts",draft:!1,unlisted:!1,editUrl:"https://github.com/entAIngine/entaingine-docs/tree/main/docs/prompting-techniques/tree-of-thoughts.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Tree of Thoughts",slug:"/prompting-techniques/tree-of-thoughts",sidebar_position:8,description:"Explore multiple reasoning paths for better solutions."},sidebar:"tutorialSidebar",previous:{title:"Prompt Chaining",permalink:"/prompting-techniques/prompt-chaining"},next:{title:"Retrieval-Augmented Generation (RAG)",permalink:"/prompting-techniques/rag"}},l={},h=[{value:"Use When",id:"use-when",level:2},{value:"Pattern",id:"pattern",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Puzzle Solving",id:"example-1-puzzle-solving",level:3},{value:"Example 2: Strategy Comparison (new)",id:"example-2-strategy-comparison-new",level:3},{value:"Benefits",id:"benefits",level:2},{value:"Pitfalls",id:"pitfalls",level:2},{value:"Tree of Thoughts Structure",id:"tree-of-thoughts-structure",level:2},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Tree of Thoughts (ToT) is an advanced prompting technique that enables language models to explore multiple reasoning paths in parallel, rather than following a single chain of thought."}),"\n",(0,i.jsx)(n.admonition,{title:"Advanced Technique \ud83c\udf33",type:"note",children:(0,i.jsx)(n.p,{children:"ToT organizes intermediate steps as nodes in a tree structure, allowing the model to consider, compare, and evaluate different solutions before selecting the best one."})}),"\n",(0,i.jsx)(n.p,{children:"By organizing intermediate steps as nodes in a tree structure, ToT allows the model to consider, compare, and evaluate different solutions before selecting the best one."}),"\n",(0,i.jsx)(n.p,{children:"This approach is inspired by human problem-solving strategies, where multiple hypotheses or strategies are explored before making a decision. ToT is especially useful for complex, open-ended, or strategic tasks that benefit from branching exploration."}),"\n",(0,i.jsx)(n.h2,{id:"use-when",children:"Use When"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The task is open-ended or benefits from exploring alternatives."}),"\n",(0,i.jsx)(n.li,{children:"You want to improve solution quality by comparing multiple reasoning paths."}),"\n",(0,i.jsx)(n.li,{children:"The problem involves planning, strategy, or multi-step decision-making."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"pattern",children:"Pattern"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Ask the model to generate several possible solutions or reasoning paths (branches)."}),"\n",(0,i.jsx)(n.li,{children:"Evaluate or compare the options to select the best one."}),"\n",(0,i.jsx)(n.li,{children:"Optionally, use search algorithms (e.g., breadth-first, depth-first) to explore the tree."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"example-1-puzzle-solving",children:"Example 1: Puzzle Solving"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"List three different ways to solve this puzzle, then choose the best approach and explain why.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Model output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1. Use logical deduction to eliminate impossible options.\n2. Try a brute-force search of all possible combinations.\n3. Apply a known heuristic to narrow down the choices.\nBest approach: Logical deduction is most efficient for this puzzle because it reduces the solution space quickly.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-2-strategy-comparison-new",children:"Example 2: Strategy Comparison (new)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"Propose several strategies for increasing user engagement on a website. Compare their pros and cons and recommend one.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Model output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Strategies:\n- Add gamification elements (badges, points)\n- Improve content personalization\n- Launch a referral program\n\nComparison:\n- Gamification can boost short-term engagement but may lose effectiveness over time.\n- Personalization increases relevance but requires more data.\n- Referral programs can drive growth but depend on existing user satisfaction.\n\nRecommendation: Start with content personalization for sustainable engagement, then layer in gamification.\n"})}),"\n",(0,i.jsx)(n.h2,{id:"benefits",children:"Benefits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exploration:"})," Considers multiple solutions, increasing the chance of finding the best one."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transparency:"})," Makes the reasoning process and trade-offs explicit."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Adaptability:"})," Can be combined with search algorithms for systematic exploration."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"pitfalls",children:"Pitfalls"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Can increase response length and complexity."}),"\n",(0,i.jsx)(n.li,{children:"May require additional evaluation to select the best path."}),"\n",(0,i.jsx)(n.li,{children:"Computationally intensive for large or deep trees."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"tree-of-thoughts-structure",children:"Tree of Thoughts Structure"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Tree of Thoughts Framework",src:t(4159).A+"",width:"1083",height:"550"})}),"\n",(0,i.jsx)(n.p,{children:"The diagram above illustrates the Tree of Thoughts framework for deliberate problem solving. The following shows how ToT explores multiple reasoning paths:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'                    Initial Problem\n                         \u2502\n           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n           \u2502             \u2502             \u2502\n       Thought 1     Thought 2     Thought 3\n      "Approach A"   "Approach B"   "Approach C"\n           \u2502             \u2502             \u2502\n      \u250c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2510\n      \u2502    \u2502    \u2502   \u2502    \u2502    \u2502   \u2502    \u2502    \u2502\n     T1.1 T1.2 T1.3 T2.1 T2.2 T2.3 T3.1 T3.2 T3.3\n      \u2502    \u2502    \u2502   \u2502    \u2502    \u2502   \u2502    \u2502    \u2502\n    [\u2713]  [\u2717]  [?]  [\u2713]  [\u2713]  [\u2717]  [\u2717]  [\u2713]  [?]\n\nWhere:\n[\u2713] = Promising path (continue exploring)\n[\u2717] = Dead end (prune this branch)  \n[?] = Uncertain (needs more evaluation)\n\nSelected paths: T1.1, T2.1, T2.2, T3.2\n                   \u2502     \u2502     \u2502     \u2502\n               Continue exploring best candidates\n                         \u2502\n                   Final Solution\n'})}),"\n",(0,i.jsx)(n.p,{children:"This branching structure allows systematic exploration of the solution space while pruning unpromising paths."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Tree of Thoughts Game of 24 Example",src:t(6205).A+"",width:"845",height:"244"})}),"\n",(0,i.jsx)(n.p,{children:"The example above shows ToT applied to the Game of 24, demonstrating how the framework evaluates different mathematical operations and reasoning paths."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Tree of Thoughts Performance Comparison",src:t(5076).A+"",width:"803",height:"307"})}),"\n",(0,i.jsx)(n.p,{children:"The performance comparison above demonstrates ToT's significant improvements over other prompting methods across various reasoning tasks."}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Yao, S., Yu, D., Zhao, J., Shafran, I., Griffiths, T. L., Cao, Y., & Narasimhan, K. (2023). ",(0,i.jsx)(n.a,{href:"https://arxiv.org/abs/2305.10601",children:"Tree of Thoughts: Deliberate Problem Solving with Large Language Models"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},4159:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TOT-4c316a0813eed34b5dc2a8622b5c886a.png"},6205:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TOT2-e1a9e9fb6ec95d58329dbb401865513b.png"},5076:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TOT3-b51d6ae3028b1083788370a13813f45f.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);